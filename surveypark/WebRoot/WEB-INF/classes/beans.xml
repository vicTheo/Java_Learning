<?xml version="1.0"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
						http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
						http://www.springframework.org/schema/context 
						http://www.springframework.org/schema/context/spring-context-3.0.xsd 
						http://www.springframework.org/schema/tx 
						http://www.springframework.org/schema/tx/spring-tx-3.0.xsd 
						http://www.springframework.org/schema/aop 
						http://www.springframework.org/schema/aop/spring-aop-3.0.xsd ">
	<!-- 组件扫描 -->
	<context:component-scan base-package="surveypark.action,surveypark.action.listener,surveypark.dao.impl,surveypark.service.impl"></context:component-scan>
	<!-- 分散配置 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<!-- 配置数据源  主库-->
	<bean id="dataSource_main" class="com.mchange.v2.c3p0.ComboPooledDataSource">
			<property name="driverClass" value="${jdbc.driverclass}" />
			<property name="jdbcUrl" value="${jdbc.url}" />
			<property name="user" value="${jdbc.username}" />
			<property name="password" value="${jdbc.password}" />
			
			<property name="maxPoolSize" value="${c3p0.pool.size.max}" />
			<property name="minPoolSize" value="${c3p0.pool.size.min}" />
			<property name="initialPoolSize" value="${c3p0.pool.size.ini}" />
			<property name="acquireIncrement" value="${c3p0.pool.size.increment}" />
	</bean>		
	<!-- 配置数据源  从库-->
	<bean id="dataSource_1" parent="dataSource_main">
			<property name="jdbcUrl" value="jdbc:mysql://localhost:3306/surveypark1"/>
	</bean>		
	<!-- 数据源路由bean -->		
	<bean id="dataSource_Router" class="surveypark.datasource.DatasourceRouter">
		<property name="targetDataSources">
			<map>
				<entry key="odd" value-ref="dataSource_main"></entry>
				<entry key="even" value-ref="dataSource_1"></entry>
			</map>
		</property>
		<property name="defaultTargetDataSource" ref="dataSource_main"></property>
	</bean>	
	<!-- 配置本地会话工厂bean，这是spring整合hibernate的核心入口 -->
	<bean id="sessionFactory" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
	<!-- 注入数据源 -->
	<property name="dataSource" ref="dataSource_Router"></property>
	<!-- 指定hibernate配置文件 -->
	<property name="configLocation" value="classpath:hibernate.cfg.xml"></property>
	<!-- 指定映射文件目录 -->
	<property name="mappingDirectoryLocations">
	<list>
	<value>classpath:surveypark/domain</value>
	</list>
	</property>
	</bean>
	
	<!-- 事务管理器在service层上实现事务管理，而且达到平台无关性 -->
	<bean id="txManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
	  <property name="sessionFactory" ref="sessionFactory"></property>
	</bean>
	<!-- 配置事务通知 -->
	<tx:advice id="tx" transaction-manager="txManager">
	<tx:attributes>
	<tx:method name="save*" propagation="REQUIRED" isolation="DEFAULT" />
	<tx:method name="update*" propagation="REQUIRED" isolation="DEFAULT" />
	<tx:method name="delete*" propagation="REQUIRED" isolation="DEFAULT" />
	<tx:method name="batch*" propagation="REQUIRED" isolation="DEFAULT" />
	<tx:method name="new*" propagation="REQUIRED" isolation="DEFAULT" />
	
	<tx:method name="find*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
	<tx:method name="get*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
	<tx:method name="load*" propagation="REQUIRED" isolation="DEFAULT" read-only="true"/>
	
	<tx:method name="*" propagation="REQUIRED" isolation="DEFAULT" />
	</tx:attributes>
	</tx:advice>
	
	<bean id="logger" class="surveypark.advice.Logger">
		<property name="logService" ref="logService"></property>
	</bean>
	<aop:config>
	<!-- 事务切入点 -->
	<aop:pointcut expression="execution(* *..*Service.*(..))" id="txPointcut"/>
	<!-- 日志切入点 -->
	<aop:pointcut expression="(execution(* *..*Service.save*(..))
									or execution(* *..*Service.update*(..))
									or execution(* *..*Service.delete*(..))
									or execution(* *..*Service.batch*(..))
									or execution(* *..*Service.new*(..))) and !bean(logService)" 
							id="logPointcut"/>
	<!-- aop事务配置 -->
	<aop:advisor advice-ref="tx" pointcut-ref="txPointcut" order="1"/>
	<!-- 日志切面 -->
	<aop:aspect ref="logger" order="0">
	   <aop:around method="record" pointcut-ref="logPointcut"/>
	</aop:aspect>
	</aop:config>
	</beans>